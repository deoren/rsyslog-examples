$DebugLevel 2
$DebugFile /var/log/rsyslog-debug-full.log

global (
        maxMessageSize="128k"
        action.reportSuspension="on"
        action.reportSuspensionContinuation="on"
        workDirectory="/var/spool/rsyslog"
        processInternalMessages="off"
)

$ActionFileDefaultTemplate RSYSLOG_FileFormat

$RepeatedMsgReduction off

$FileOwner syslog
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022

# rsyslog starts as root, but will attempt to drop privileges to the specified
# user and group if the name-to-id lookup succeeds.
$PrivDropToUser syslog
$PrivDropToGroup syslog

$WorkDirectory /var/spool/rsyslog

module(
    load="imuxsock"
    sysSock.use="on"
    SysSock.Annotate="on"
    SysSock.ParseTrusted="on"
)

module(load="imfile")

module(
    load="builtin:omfile"
    fileOwner="syslog"
    fileGroup="adm"
    dirOwner="syslog"
    dirGroup="adm"
    fileCreateMode="0640"
    dirCreateMode="0755"
)

#module(load="mmjsonparse")


input(
    type="imfile"
    readMode="0"
    File="/var/log/apt/history.log"
    Tag="apt-history"
    Facility="local7"
    addMetadata="on"
)

input(
    type="imfile"
    readMode="0"
    File="/var/log/apt/term.log"
    Tag="apt-term"
    Facility="local7"
    addMetadata="on"
)

if ($fromhost-ip == "127.0.0.1" or $inputname == "imfile") then {
    set $.hostname = $$myhostname;
    set $.ipaddr = "127.0.0.1";
    set $.tag = $syslogtag;
    set $!tag = $.tag;

    # This line seems to cause a segfault
    set $.msg = ltrim($msg);

    # Temp replacement line for the ltrim variant above which causes a segfault
    #set $.msg = $msg;
    set $!msg = $.msg;
}

if ($inputname == "imfile") then {

    action(
        name="rsyslog-debug-local"
        template="RSYSLOG_DebugFormat"
        type="omfile"
        file="/var/log/rsyslog-debug-imfile.log"
    )

    action(
        name="rsyslog-debug-local"
        type="omfile"
        file="/var/log/rsyslog-normal-imfile.log"
    )

}
