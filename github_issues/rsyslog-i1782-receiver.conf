# Test case that helps illustrate that imrelp does not honor
# global.maxMessageSize (see rsyslog/rsyslog#1782 on GitHub).


global (

    # Expectation: imrelp MaxDataSize parameter inherits this value
    maxMessageSize="128k"
    action.reportSuspension="on"
    action.reportSuspensionContinuation="on"
    workDirectory="/var/spool/rsyslog"
    processInternalMessages="off"
    parser.permitSlashInProgramName="on"
)

$ActionFileDefaultTemplate RSYSLOG_FileFormat
$RepeatedMsgReduction off
$WorkDirectory /var/spool/rsyslog
$PrivDropToUser syslog
$PrivDropToGroup syslog

module(
    load="builtin:omfile"
    fileOwner="syslog"
    fileGroup="adm"
    dirOwner="syslog"
    dirGroup="adm"
    fileCreateMode="0640"
    dirCreateMode="0755"
)

module(load="imrelp")
module(load="omrelp")

module(
    load="impstats"
    interval="30"
    log.syslog="off"
    log.file="/var/log/rsyslog-pstats.log"
)

# The imrelp module SHOULD be inheriting the provided value for the global
# maxMessageSize parameter. Since that does not appear to be the case,
# we have to explicitly set MaxDataSize to the same value as the global
# maxMessageSize if we wish for both values to match.
# input(type="imrelp" port="2514" KeepAlive="on" MaxDataSize="128k")
input(type="imrelp" port="2514" KeepAlive="on")

$DebugLevel 2
$DebugFile /var/log/rsyslog-debug-full.log

# Place imrelp input into a dedicated file for troubleshooting purposes
if ($inputname == "imrelp") then {

    action(
        name="debug-relp-input"
        template="RSYSLOG_DebugFormat"
        type="omfile"
        file="/var/log/rsyslog-debug-relp-input.log"
    )
}

# Log everything else to another location
else {

    action(
        name="local-log-messages"
        template="RSYSLOG_FileFormat"
        type="omfile"
        file="/var/log/rsyslog-local-messages.log"
    )
}
