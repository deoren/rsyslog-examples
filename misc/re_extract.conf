# Purpose: 
#
# Create working rsyslog example conf using re_extract to pull matching strings
# from specific UP/DOWN HAProxy event messages.

# References:
#
# * http://www.rsyslog.com/regex/
# * http://www.rsyslog.com/doc/v8-stable/rainerscript/functions.html
# * https://www.loggly.com/docs/scrub-data-rsyslog/
# * https://selivan.github.io/2017/02/07/rsyslog-log-forward-save-filename-handle-multi-line-failover.html


module(
    load="imuxsock"
    sysSock.use="on"
    SysSock.Annotate="on"
    SysSock.ParseTrusted="on"
)

module(
    load="builtin:omfile"
    fileOwner="syslog"
    fileGroup="adm"
    dirOwner="syslog"
    dirGroup="adm"
    fileCreateMode="0640"
    dirCreateMode="0755"

    # a modern logfile format with high-precision timestamps and timezone info
    template="RSYSLOG_FileFormat"
)

# Templates used for critical email alerts by ommail output plugin
template(name="mailBody" type="list") {
    constant(value="Reporting system: ")
    property(name="$myhostname")
    constant(value="\n")
    constant(value="Message reported: ")
    property(name="timereported" dateFormat="rfc3339")
    constant(value="\n")
    constant(value="Message received: ")
    property(name="timegenerated" dateFormat="rfc3339")

    # Add some whitespace to help separate the message from the "wall" of
    # details just prior.
    constant(value="\n\n")
    constant(value="Message: ")
    property(name="msg" droplastlf="on" )
    constant(value="\n")
}

# Used as omfile template
template(name="haproxy-mailSubject" type="string" string="relay server is %$.relayserver% - status is %$.relayserver-status%")

# Used to combine subject and body strings for testing via omfile action
template(name="haproxy-test-results" type="string" string="%$.subject%\n\n%$.body%\n")


if ($programname == 'haproxy') or ($app-name == 'haproxy') then {

    # Status change indicators to generate alerts for
    if ($msg contains ["is UP", "is DOWN"]) then {

        # Pattern to use for match/extraction:
        #
        # Message:  Server bk_postfix/relay1 is UP/READY (leaving forced maintenance).
        # regex that passes rubular.com:
        # Server bk_postfix\/(.*) is (.*) \((.*)\)
        set $.relayserver = re_extract($msg,
            "Server (.*)\\/(.*) is ([0-9A-Za-z]+\\/[0-9A-Za-z]+ \\([[:space:]0-9A-Za-z]+\\))",
            0, 1,
            'unknown relay server');

        set $.relayserver-status = re_extract(
            $msg,
            "Server (.*)\\/(.*) is ([0-9A-Za-z]+\\/[0-9A-Za-z]+ \\([[:space:]0-9A-Za-z]+\\))",
            0, 3,
            'unknown status'
        );

        set $.subject = exec_template("haproxy-mailSubject");
        set $.body = exec_template("mailBody");

        action(
            type="omfile"
            name="reextract-test"

            # Use template that makes use of earlier values computed by
            # exec_template calls.
            template="haproxy-test-results"
            file="/var/log/rsyslog-testing.log"
        )

    }
}
